panic: open log/snow.log: no such file or directory

goroutine 1 [running]:
utils.LogInit(0x586f3e, 0xc)
	/home/pi/pengbaojiang/code/gosrc/futty_golang/src/utils/context.go:47 +0x64
main.initLog()
	/home/pi/pengbaojiang/code/gosrc/futty_golang/src/snow/main.go:51 +0x24
main.main()
	/home/pi/pengbaojiang/code/gosrc/futty_golang/src/snow/main.go:17 +0x14
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snowplat.(*SnowPlat).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snowplat.(*SnowPlat).getTestData-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN] 2020/03/08 - 07:59:52 | 200 |    1.316703ms | 192.168.199.145 | GET      /snow/show_msg
[GIN] 2020/03/08 - 07:59:52 | 404 |       4.963µs | 192.168.199.145 | GET      /favicon.ico
[GIN] 2020/03/08 - 08:00:03 | 200 |     338.935µs | 192.168.199.145 | GET      /snow/show_msg
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*SnowPlat).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*SnowPlat).getTestData-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN] 2020/03/15 - 15:13:23 | 200 |     746.206µs | 192.168.199.145 | GET      /snow/show_msg
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN] 2020/03/16 - 23:55:48 | 200 |    1.198592ms | 192.168.199.145 | GET      /snow/show_msg
[GIN] 2020/03/16 - 23:55:58 | 404 |       4.296µs | 192.168.199.145 | GET      /snow/cmd
[GIN] 2020/03/16 - 23:56:34 | 404 |       4.685µs | 192.168.199.145 | GET      /cmd
[GIN] 2020/03/16 - 23:56:50 | 200 |     298.768µs | 192.168.199.145 | GET      /cmd/exec
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN] 2020/03/17 - 00:00:35 | 200 |     639.295µs | 192.168.199.145 | GET      /cmd/exec
[GIN] 2020/03/17 - 00:00:37 | 200 |      181.55µs | 192.168.199.145 | GET      /cmd/exec
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN] 2020/03/17 - 00:02:25 | 200 |    1.207093ms | 192.168.199.145 | GET      /cmd/exec
[GIN] 2020/03/17 - 00:02:35 | 200 |    9.180887ms | 192.168.199.145 | GET      /cmd/exec?method=ls
[GIN] 2020/03/17 - 00:03:09 | 200 |    8.931765ms | 192.168.199.145 | GET      /cmd/exec?method=ls&param=
[GIN] 2020/03/17 - 00:05:43 | 200 |    9.209036ms | 192.168.199.145 | GET      /cmd/exec?method=ls&param=
[GIN] 2020/03/17 - 00:05:48 | 200 |    9.804832ms | 192.168.199.145 | GET      /cmd/exec?method=ls&param=ab
[GIN] 2020/03/17 - 00:06:58 | 200 |   10.307003ms | 192.168.199.145 | GET      /cmd/exec?method=ls&param=./
[GIN] 2020/03/17 - 00:07:14 | 200 |    9.007024ms | 192.168.199.145 | GET      /cmd/exec?method=ls&params=./
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN] 2020/03/17 - 00:11:10 | 200 |   70.724293ms | 192.168.199.145 | GET      /cmd/exec?method=pythontest
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN] 2020/03/17 - 00:12:04 | 200 |   36.147471ms | 192.168.199.145 | GET      /cmd/exec?method=pythontest
[GIN] 2020/03/17 - 00:12:05 | 200 |   35.394338ms | 192.168.199.145 | GET      /cmd/exec?method=pythontest
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN] 2020/03/17 - 00:13:43 | 200 |   67.941051ms | 192.168.199.145 | GET      /cmd/exec?method=pythontest
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN] 2020/03/17 - 00:15:18 | 200 |   60.603442ms | 192.168.199.145 | GET      /cmd/exec?method=pythontest
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN] 2020/03/17 - 00:15:54 | 200 |   34.092197ms | 192.168.199.145 | GET      /cmd/exec?method=pythontest
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN] 2020/03/17 - 00:19:38 | 200 |   44.036152ms | 192.168.199.145 | GET      /cmd/exec?method=pythontest
[GIN] 2020/03/22 - 22:53:21 | 200 |     995.125µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/22 - 22:53:30 | 200 |      225.55µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/22 - 22:54:02 | 200 |      191.81µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/22 - 22:55:44 | 200 |     228.717µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/22 - 22:56:23 | 200 |     224.957µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/22 - 22:59:15 | 200 |     235.087µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/22 - 22:59:30 | 200 |     210.976µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/22 - 23:00:25 | 200 |      218.92µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/22 - 23:00:52 | 200 |     214.124µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/22 - 23:01:05 | 200 |     224.105µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/22 - 23:01:06 | 200 |     215.328µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/22 - 23:01:08 | 200 |     219.846µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/23 - 22:46:20 | 200 |      261.73µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/23 - 22:46:21 | 200 |     270.711µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/23 - 22:46:21 | 200 |     299.859µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/03/23 - 22:46:22 | 200 |     211.325µs |       127.0.0.1 | GET      /snow/show_msg
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN] 2020/05/04 - 20:56:56 | 200 |    8.362282ms |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/05/04 - 20:56:58 | 200 |     369.805µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/05/04 - 20:56:58 | 200 |     229.272µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/05/04 - 20:56:59 | 200 |     229.254µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/05/04 - 20:57:00 | 200 |     222.753µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/05/04 - 20:57:01 | 200 |     204.476µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/05/04 - 20:57:06 | 200 |     266.363µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/05/04 - 20:57:07 | 200 |     229.234µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/05/04 - 20:57:08 | 200 |     222.661µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/05/04 - 20:57:08 | 200 |     224.031µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/05/04 - 21:00:09 | 200 |     255.771µs |       127.0.0.1 | GET      /snow/show_msg
[GIN] 2020/05/04 - 21:02:22 | 200 |     250.827µs |       127.0.0.1 | GET      /snow/show_msg
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /file/upload              --> api.(*FileOp).upload-fm (3 handlers)
[GIN-debug] POST   /file/list                --> api.(*FileOp).list-fm (3 handlers)
[GIN-debug] POST   /file/download            --> api.(*FileOp).download-fm (3 handlers)
[GIN-debug] POST   /confserver/get_conf      --> confserver.(*ConfServer).getConf-fm (3 handlers)
[GIN-debug] POST   /confserver/update_conf   --> confserver.(*ConfServer).updateConf-fm (3 handlers)
[GIN-debug] GET    /snow/show_msg            --> snow/model/service.(*HomeService).showmsg-fm (3 handlers)
[GIN-debug] GET    /snow/get_data            --> snow/model/service.(*HomeService).getTestData-fm (3 handlers)
[GIN-debug] GET    /cmd/exec                 --> snow/model/service.(*CmdService).Exec-fm (3 handlers)
[GIN-debug] GET    /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /static/*filepath         --> github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8765
